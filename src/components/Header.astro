---
import CtaButton from "../ui/CtaButton.astro";
import Menu from "./Menu.astro";

interface Props {
  animate: boolean;
}

const { animate } = Astro.props;
---

<nav
  id="navbar"
  class={`absolute z-10 w-full ${animate === true && "animate-animateNavbar invisible -z-50 -top-26 "}`}
>
  <div class="max-w-[1600px] mx-auto px-5 sm:px-10">
    <div class="flex justify-between">
      <a href="/">
        <img
          src="/newLogo.svg"
          alt="logoKancelariaPaulinaKomenda"
          class="h-full max-h-[83px] w-full max-w-[298px] min-w-[230px] pt-[2.3vh] cursor-pointer"
          loading="eager"
        />
      </a>
      <div
        class="hidden lg:flex gap-12 2xl:gap-16 font-normal font-sans pt-2 items-center mix-blend-difference transition-colors"
      >
        <a
          href="#services"
          class="h-fit whitespace-nowrap font-semibold cursor-pointer nav-link hover:text-[#B58C67] active:text-[#333333] focus:border-[#533630]"
          aria-label="Usługi prawne">USŁUGI PRAWNE</a
        >
        <a
          href="#about"
          class="h-fit whitespace-nowrap font-semibold cursor-pointer nav-link hover:text-[#B58C67] active:text-[#333333] focus:border-[#533630]"
          aria-label="O mnie">O MNIE</a
        >
        <a
          href="#blog"
          class="h-fit whitespace-nowrap font-semibold cursor-pointer nav-link hover:text-[#B58C67] active:text-[#333333] focus:border-[#533630]"
          aria-label="Blog">BLOG</a
        >
        <a href="#contact" class="nav-link" aria-label="Kontakt">
          <CtaButton text="KONTAKT" variant="contain" />
        </a>
      </div>
      <div class="lg:hidden flex items-center">
        <button class="outline-none mobile-menu-button">
          <svg
            class="w-6 h-6 hamburger-icon"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg
            class="w-6 h-6 hidden close-icon"
            fill="none"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile hamburger menu -->
  <div
    class="hidden mobile-menu absolute top-0 left-0 w-full h-screen z-40 animation-menu-slide-out"
  >
    <div class="min-h-screen bg-[#EEE5DA] px-5 pb-12">
      <Menu />
    </div>
  </div>
</nav>

<style>
  @keyframes slide-down {
    0% {
      transform: translateY(-100%);
    }
    100% {
      transform: translateY(0);
    }
  }

  @keyframes slide-up {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-100%);
    }
  }

  .animation-menu-slide-in {
    animation: slide-down 0.7s forwards;
  }

  .animation-menu-slide-out {
    animation: slide-up 0.1s forwards;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .mobile-menu {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
</style>

<script defer>
  document.addEventListener("DOMContentLoaded", () => {
    // Select elements
    const btn = document.querySelector(".mobile-menu-button");
    const closeBtn = document.querySelector(".mobile-menu-close");
    const menu = document.querySelector(".mobile-menu");
    const hamburgerIcon = document.querySelector(".hamburger-icon");
    const closeIcon = document.querySelector(".close-icon");
    const navLinks = document.querySelectorAll(".nav-link");

    // Open mobile menu
    btn.addEventListener("click", () => {
      menu.classList.remove("hidden", "animation-menu-slide-out");
      menu.classList.add("animation-menu-slide-in");
      hamburgerIcon.classList.add("hidden");
      closeIcon.classList.remove("hidden");

      // Disable scrolling on the body
      document.body.style.position = "fixed";
      document.body.style.overflow = "hidden";
    });

    // Close mobile menu when clicking the "X" button
    closeBtn.addEventListener("click", () => {
      menu.classList.remove("animation-menu-slide-in");
      menu.classList.add("animation-menu-slide-out");

      setTimeout(() => {
        menu.classList.add("hidden");
        // Re-enable scrolling on the body
        document.body.style.position = "";
        document.body.style.overflow = "";

        hamburgerIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }, 100); // Match the duration of the slide-up animation
    });

    // Smooth scrolling and close menu on link click
    navLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault(); // Prevent default anchor link behavior

        // Get the target element by id from the href attribute
        const targetId = link.getAttribute("href").substring(1); // Remove the '#' character
        const targetElement = document.getElementById(targetId);

        if (targetElement) {
          // Close the mobile menu first
          menu.classList.remove("animation-menu-slide-in");
          menu.classList.add("animation-menu-slide-out");

          setTimeout(() => {
            menu.classList.add("hidden");
            // Re-enable scrolling on the body
            document.body.style.position = "";
            document.body.style.overflow = "";

            // Scroll to the target element
            targetElement.scrollIntoView({
              behavior: "smooth", // Smooth scrolling behavior
              block: "start", // Align the top of the element with the top of the viewport
            });
          }, 100); // Match the duration of the slide-up animation

          hamburgerIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        }
      });
    });
  });
</script>
